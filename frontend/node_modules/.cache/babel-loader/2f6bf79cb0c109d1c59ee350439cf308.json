{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from 'moment'; // Date Fns is used to format the dates we receive\n// from our API call\n// import { format } from \"date-fns\";\n// define a generatePDF function that accepts a marks argument\n\nconst GeneratePDFAll = marks => {\n  // initialize jsPDF\n  const doc = new jsPDF(); // define the columns we want and their titles\n\n  const tableColumn = [\"Exam ID\", \"Exam Name\", \"Grade\", \"Subject\", \"Date\", \"Time\"]; // define an empty array of rows\n\n  const tableRows = []; // for each ticket pass all its data into an array\n\n  marks.forEach(markStd => {\n    const markStdData = [markStd.examId, markStd.name, markStd.Grade, markStd.Subject, moment(markStd.date).format('DD-MM-YYYY'), markStd.timeStart + \"-\" + markStd.timeEnd]; // push each tickcet's info into a row\n\n    tableRows.push(markStdData);\n  }); // startY is basically margin-top\n\n  doc.autoTable(tableColumn, tableRows, {\n    startY: 20\n  });\n  const date = Date().split(\" \"); // we use a date string to generate our filename.\n\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4]; // ticket title. and margin-top + margin-left\n\n  doc.text(`All Submited Exams Report`, 14, 15); // we define the name of our PDF file.\n\n  doc.save(`report_exams_${dateStr}.pdf`);\n};\n\n_c = GeneratePDFAll;\nexport default GeneratePDFAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneratePDFAll\");","map":{"version":3,"sources":["A:/ITP GIT/itp_project_group_b4-wd_b04_itp_10/OnlineExam_and_Evaluation/frontend/src/components/Exam/GenReport/GeneratePDFAll.js"],"names":["jsPDF","moment","GeneratePDFAll","marks","doc","tableColumn","tableRows","forEach","markStd","markStdData","examId","name","Grade","Subject","date","format","timeStart","timeEnd","push","autoTable","startY","Date","split","dateStr","text","save"],"mappings":"AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;AACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC;AACA,QAAMC,GAAG,GAAG,IAAIJ,KAAJ,EAAZ,CAFgC,CAIhC;;AACA,QAAMK,WAAW,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,SAAlC,EAA6C,MAA7C,EAAqD,MAArD,CAApB,CALgC,CAMhC;;AACA,QAAMC,SAAS,GAAG,EAAlB,CAPgC,CAShC;;AACAH,EAAAA,KAAK,CAACI,OAAN,CAAcC,OAAO,IAAI;AACvB,UAAMC,WAAW,GAAG,CAClBD,OAAO,CAACE,MADU,EAElBF,OAAO,CAACG,IAFU,EAGlBH,OAAO,CAACI,KAHU,EAIlBJ,OAAO,CAACK,OAJU,EAKlBZ,MAAM,CAACO,OAAO,CAACM,IAAT,CAAN,CAAqBC,MAArB,CAA4B,YAA5B,CALkB,EAMlBP,OAAO,CAACQ,SAAR,GAAoB,GAApB,GAA0BR,OAAO,CAACS,OANhB,CAApB,CADuB,CASvB;;AACAX,IAAAA,SAAS,CAACY,IAAV,CAAeT,WAAf;AACD,GAXD,EAVgC,CAwBhC;;AACAL,EAAAA,GAAG,CAACe,SAAJ,CAAcd,WAAd,EAA2BC,SAA3B,EAAsC;AAAEc,IAAAA,MAAM,EAAE;AAAV,GAAtC;AACA,QAAMN,IAAI,GAAGO,IAAI,GAAGC,KAAP,CAAa,GAAb,CAAb,CA1BgC,CA2BhC;;AACA,QAAMC,OAAO,GAAGT,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAd,GAAoBA,IAAI,CAAC,CAAD,CAAxB,GAA8BA,IAAI,CAAC,CAAD,CAAlC,GAAwCA,IAAI,CAAC,CAAD,CAA5D,CA5BgC,CA6BhC;;AACAV,EAAAA,GAAG,CAACoB,IAAJ,CAAU,2BAAV,EAAsC,EAAtC,EAA0C,EAA1C,EA9BgC,CA+BhC;;AACApB,EAAAA,GAAG,CAACqB,IAAJ,CAAU,gBAAeF,OAAQ,MAAjC;AACD,CAjCD;;KAAMrB,c;AAmCN,eAAeA,cAAf","sourcesContent":["\r\n\r\nimport jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from 'moment';\r\n// Date Fns is used to format the dates we receive\r\n// from our API call\r\n// import { format } from \"date-fns\";\r\n\r\n// define a generatePDF function that accepts a marks argument\r\nconst GeneratePDFAll = (marks) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n\r\n  // define the columns we want and their titles\r\n  const tableColumn = [\"Exam ID\", \"Exam Name\", \"Grade\", \"Subject\", \"Date\", \"Time\"];\r\n  // define an empty array of rows\r\n  const tableRows = [];\r\n\r\n  // for each ticket pass all its data into an array\r\n  marks.forEach(markStd => {\r\n    const markStdData = [\r\n      markStd.examId,\r\n      markStd.name,\r\n      markStd.Grade,\r\n      markStd.Subject,\r\n      moment(markStd.date).format('DD-MM-YYYY'),\r\n      markStd.timeStart + \"-\" + markStd.timeEnd,\r\n    ];\r\n    // push each tickcet's info into a row\r\n    tableRows.push(markStdData);\r\n  });\r\n\r\n  \r\n  // startY is basically margin-top\r\n  doc.autoTable(tableColumn, tableRows, { startY: 20 });\r\n  const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  const dateStr = date[0] + date[1] + date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  doc.text(`All Submited Exams Report`, 14, 15);\r\n  // we define the name of our PDF file.\r\n  doc.save(`report_exams_${dateStr}.pdf`);\r\n};\r\n\r\nexport default GeneratePDFAll;"]},"metadata":{},"sourceType":"module"}