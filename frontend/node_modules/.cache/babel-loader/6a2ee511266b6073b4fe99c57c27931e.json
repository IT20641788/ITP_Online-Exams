{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DULANJALI\\\\Desktop\\\\ITP_Online Exam -copy\\\\frontend\\\\src\\\\components\\\\Exam\\\\AllExam.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axois from 'axios';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport moment from 'moment';\nimport GeneratePDFAll from './GenReport/GeneratePDFAll'; // Json web token need to handle with login page username password\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllExam() {\n  _s();\n\n  const [exams, setExams] = useState([]);\n  useEffect(() => {\n    function getExams() {\n      axois.get(\"http://localhost:5000/backend/examR/\").then(res => {\n        setExams(res.data);\n      }).catch(err => {\n        console.log(\"error : \");\n        alert(err.massage);\n      });\n    }\n\n    getExams();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3 text-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-3\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \" Exam Details  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: () => GeneratePDFAll(exams),\n            children: \" Download All Exams\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: exams.map((val, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow my-3 p-3 rounded bg-dark bg-gradient text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"w-25\",\n                  children: \"Exam ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.examId, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" Exam Name \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" grade \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.grade, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" subject \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.subject, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" Date \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", moment(val.date).format('DD-MM-YYYY'), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" Time  \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.timeStart, \"  To \", val.timeEnd, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Notice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"\",\n                  children: [\" \", val.notice, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              className: \"btn btn-success m-2\",\n              to: `/ExamUpdateComponet/${val.examId}`,\n              children: \" Modify \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger m-2\",\n              onClick: () => {\n                const idExm = val.examId;\n                console.log(val.examId);\n                axios.delete(\"http://localhost:8000/exam/delete/\" + idExm).then(() => {\n                  alert(\"Exam Deleted\");\n                  window.location = '/ExamComponet';\n                }).catch(err => {\n                  alert(err);\n                });\n              },\n              children: \" Delete \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllExam, \"GCbYSKXuW7GtZZBxJTxbrB8ezoY=\");\n\n_c = AllExam;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllExam\");","map":{"version":3,"sources":["C:/Users/DULANJALI/Desktop/ITP_Online Exam -copy/frontend/src/components/Exam/AllExam.js"],"names":["React","useState","useEffect","axois","Link","axios","moment","GeneratePDFAll","AllExam","exams","setExams","getExams","get","then","res","data","catch","err","console","log","alert","massage","map","val","key","examId","name","grade","subject","date","format","timeStart","timeEnd","notice","idExm","delete","window","location"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axois from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport GeneratePDFAll from './GenReport/GeneratePDFAll';\r\n\r\n\r\n// Json web token need to handle with login page username password\r\nexport default function AllExam() {\r\n\r\n    const [exams, setExams] = useState([]);\r\n    useEffect(() => {\r\n        function getExams() {\r\n            axois.get(\"http://localhost:5000/backend/examR/\").then((res) => {\r\n                \r\n                setExams(res.data);               \r\n            }).catch((err) => {\r\n                console.log(\"error : \", );\r\n                alert(err.massage);\r\n            })\r\n        }\r\n        getExams();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-3 text-start\" >\r\n                <div className=\"row\">\r\n                    <div className=\"col col-3\">\r\n                        <h3> Exam Details  </h3>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={() => GeneratePDFAll(exams)}\r\n                            > Download All Exams \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div>\r\n                    {\r\n                        exams.map((val, key) => {\r\n                            return (\r\n                            <div className=\"shadow my-3 p-3 rounded bg-dark bg-gradient text-white\"> \r\n                                <table>\r\n                                    <tr>\r\n                                        <th className=\"w-25\">Exam ID</th>\r\n                                        <td className=\"\"> {val.examId} </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Exam Name </th>\r\n                                        <td className=\"\"> {val.name} </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> grade </th>\r\n                                        <td className=\"\"> {val.grade} </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> subject </th>\r\n                                        <td className=\"\"> {val.subject} </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Date </th>\r\n                                        <td className=\"\"> {moment(val.date).format('DD-MM-YYYY') } </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th> Time  </th>\r\n                                        <td className=\"\"> {val.timeStart}  To {val.timeEnd} </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Notice</th>\r\n                                        <td className=\"\"> {val.notice} </td>\r\n                                    </tr>\r\n                                    \r\n                                </table>\r\n                                <Link className=\"btn btn-success m-2\" to={`/ExamUpdateComponet/${val.examId}`} > Modify </Link>\r\n                                \r\n                                <button className=\"btn btn-danger m-2\"\r\n                                    onClick={() => {\r\n                                        const idExm = val.examId\r\n                                        console.log(val.examId)\r\n                                        axios.delete(\"http://localhost:8000/exam/delete/\"+idExm).then(() => {\r\n                                            alert(\"Exam Deleted\")\r\n                                            window.location = '/ExamComponet';\r\n                                        }).catch((err) => {\r\n                                            alert(err)\r\n                                        })\r\n                                    }}\r\n                                    > Delete </button>\r\n                            </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}